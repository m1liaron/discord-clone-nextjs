// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String            @id @default(uuid())
  email        String
  username     String         @unique
  displayName  String         @unique
  password     String
  createdAt    DateTime       @default(now())
  dateOfBirth  DateTime
  Message      Message[]
  Server       Server[]
  ServerMember ServerMember[]
}

model Server {
  id        Int            @id @default(autoincrement())
  name      String
  icon      String? // Optional icon for the server
  ownerId   String
  createdAt DateTime       @default(now())
  owner     User           @relation(fields: [ownerId], references: [id])
  members   ServerMember[]
}

model ServerMember {
  id       Int        @id @default(autoincrement())
  serverId Int
  userId   String
  joinedAt DateTime   @default(now())
  role     ServerRole // Role assigned to the user in the server
  // Relations
  user     User       @relation(fields: [userId], references: [id])
  server   Server     @relation(fields: [serverId], references: [id])
}

model Channel {
  id        Int         @id @default(autoincrement())
  name      String
  serverId  Int
  type      ChannelType
  createdAt DateTime    @default(now())
  messages  Message[]
}

model Message {
  id        Int      @id @default(autoincrement())
  content   String
  userId    String
  channelId Int
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  channel   Channel  @relation(fields: [channelId], references: [id])
}

enum ChannelType {
  TEXT
  VOICE
}

enum ServerRole {
  OWNER
  ADMIN
  MODERATOR
  MEMBER
}
